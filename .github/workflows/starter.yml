# This is a basic workflow to help you get started with Actions

name: Native Windows CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, windows_github_build ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Check $GITHUB_WORKSPACE
        run: ls $env:GITHUB_WORKSPACE

      - name: Install pkg-config through chocolatey
        run: choco install pkgconfiglite

        # TODO: Should the 3rdparty libs be in win64_3rdparty
      - name: Download & build eigen lib
        run: |
          Invoke-WebRequest -OutFile eigen.zip https://gitlab.com/libeigen/eigen/-/archive/3.3.8/eigen-3.3.8.zip
          Expand-Archive -LiteralPath eigen.zip -DestinationPath packaging\win32_3rdparty
          Set-Location -Path packaging\win32_3rdparty\eigen*
          New-Item -ItemType "directory" -Path .\build
          sl build
          cmake -DCMAKE_INSTALL_PREFIX=$env:GITHUB_WORKSPACE\packaging\win32_3rdparty\ -DEIGEN_BUILD_PKGCONFIG=ON -Wno-dev ..

      - name: Configure build
        run: |
          python -X utf8 waf configure -v
